단방향
반이중
전이중

유니캐스트
멀티캐스트
브로드캐스트

IP는 2진수 총 32자리

0000 0000 . 0000 0000 . 0000 0000 . 0000 0000

1111 1111 . 1111 1111 . 1111 1111 . 1111 1111

공인 IP - 실제 인터넷에서 사용되는 IP, 관리기관이 존재
 ※ 관리기관 : 국제인터넷망정보센터 (InterNIC)

사설 IP
 - 내부에서 사용되는 IP
 - 공인 IP의 갯수가 모자라기때문에
 - 사설 네트워크 구성을 알 수가 없기에 보안이 강화
 - 회사나 가정 내에서  동일한 IP를 충돌없이 사용할 수 있다.
 
172.16.10.200
1010 1100 . 0001 0000 . 0000 1010 . 1100 1000

211.100.50.3

192.168.111.2

10.100.102.36

100.100.25.64

168.126.63.1

182.100.250.44

서브넷마스크
 - IP와의 연산을 통해 네트워크를 특정짓는다.
 - IP와의 연산을 통해 네트워크 ID라는 것을 얻을 수가 있다.
   => 같은 네트워크 ID를 가지고 같은 서브넷마스크를 가지면 같은 네트워크에 속해있다 라고 할 수 있다.
 - 서브넷 마스크의 비트1은 앞에서부터 채워져나간다.
   = 1사이에 0이 있으면 안됀다.
 - 서브넷마스크 표기법
   10.100.102.36	255.255.255.0	10.100.102.36/24 
   10.100.102.36	255.255.0.0	10.100.102.36/16
   10.100.102.36	255.255.255.252	10.100.102.36/30

같은 네트워크에 속해있는 애들끼리는 기본적으로 통신이 가능하다
=> 다른 네트워크에 속해있는 애들끼리는 기본적으로 통신이 불가능하다.
 => 하지만! 어떠한 도움을 통해서는 다른 네트워크에 속해있는 애들끼리도 통신이 가능하다.

AND 연산 (비트연산)
0	0
0	1
1	0
1	1	=>	1

IP 10.100.102.36
0000 1010 . 0110 0100 . 0110 0110 . 0010 0100
NETMASK 255.255.255.0
1111 1111 . 1111 1111 . 1111 1111 . 0000 0000


0000 1010 . 0110 0100 . 0110 0110 . 0010 0100
1111 1111 . 1111 1111 . 1111 1111 . 0000 0000

0000 1010 . 0110 0100 . 0110 0110 . 0000 0000
10.100.102.0

=> 같은 연산 결과와 같은 서브넷마스크를 가지고 있으면 같은 네트워크에 속해있다라고 한다.

10.100.102.XXX  255.255.255.0과 연산하면 10.100.102.0이 된다.

10.100.102.0 ~ 10.100.102.255 + 255.255.255.0 조합은 같은 네트워크에 속한다.

네트워크 ID : 하나의 네트워크를 대표하는 IP
        연산을 해서 나온 결과=그 네트워크에서 존재하는 IP 중 가장 작은 수
(10.100.102.0 ~ 10.100.102.255 사이의 IP와 서브넷마스크를 연산하면 나오는 수가 10.100.102.0)
네트워크 ID + 서브넷마스크로 네트워크를 정의할 수 있다.
브로드캐스트IP : 네트워크에서 가장 큰 수를 지정 10.100.102.255

▷ 10.100.102.0/24 네트워크
IP 10.100.102.0~10.100.102.255 가 속해있다.
네트워크 ID는 10.100.102.0 이다.
브로드캐스트 IP는 10.100.102.255 이다.
사용가능한 HOST IP 범위 10.100.102.1~10.100.102.254

10.100.102.36/24
10.100.102.45/24
10.100.102.158/24

10.100.103.5/24
네트워크 ID		10.100.103.0
브로드캐스트 IP		10.100.103.255
사용 가능한 HOST 범위	10.100.103.1~10.100.103.254

1. 100.254.120.36/8
100.0.0.0
100.255.255.255
100.0.0.1 ~ 100.255.255.254

2. 20.20.5.4/8
20.0.0.0
20.255.255.255
20.0.0.1 ~ 20.255.255.254

3. 172.16.31.5/16
172.16.0.0
172.16.255.255
172.16.0.1 ~ 172.16.255.254

4. 168.126.63.2/16
5. 192.168.10.100/24
192.168.10.0
192.168.10.255
192.168.10.1~192.168.10.254

6. 211.182.233.5/24
------------------------------------------------------------
	A 클레스 IP				A 클레스 서브넷마스크
0. 1			0000 0001 .		255.0.0.0
1. 126.100.254.5		0111 1110 . ~

	B 클레스 IP				B 클레스 서브넷마스크
2. 128.25.16.4		1000 0000 .		255.255.0.0
3. 191.255.0.54		1011 1111 . 

	C 클레스 IP				C 클레스 서브넷마스크
4. 192.0.0.5		1100 0000 .		255.255.255.0
5. 223.255.255.4		1101 1111.

	D 클레스 IP
1110 

	E 클레스 IP
1111 0
	※ 0.0.0.0
	※ 127

Classful IP			Subnet
A클레스 : 1.0.0.0 ~ 126.0.0.0 		/8	제일 앞 비트가 0
B클레스 : 128.0.0.0 ~ 191.255.0.0 	/16	제일 앞 비트가 10
C클레스 : 192.0.0.0 ~ 223.255.255.0 	/24	제일 앞 비트가 110
D클레스 : 224 ~ 239 - 멀티캐스트용		제일 앞 비트가 1110
E 클레스 : 240 ~ 255 - 연구용, 예비용		제일 앞 비트가 11110
	※ 0.0.0.0은 모든 네트워크를 뜻하고, 127은 루프백용

각 대역별 사설IP
A 클레스 : 10.0.0.0 ~ 10.255.255.255		10.0.0.0/8		
B 클레스 : 172.16.0.0 ~ 172.31.255.255		172.16.0.0/12
C 클레스 : 192.168.0.0 ~ 192.168.255.255 	192.168.0.0/16

192.168.0.0/24	1111 1111. 1111 1111. 1111 1111. 0000 0000
0~254

192.168.0.0/25	1111 1111. 1111 1111. 1111 1111. 1000 0000

0000 0000	IP 192.168.0.0
1000 0000
-----------
0000 0000

0000 0001	IP 192.168.0.1
1000 0000 
-----------
0000 0000

0000 0010	IP 192.168.0.2
1000 0000
-----------
0000 0000
0111 1110	IP 192.168.0.126
1000 0000
------------
0000 0000

0111 1111	192.168.0.127
1000 0000
0000 0000	결과가 192.168.0.0

192.168.0.0/25
192.168.0.0 ~ 192.168.0.127
같은 네트워크 : 같은 네트워크 ID + 같은 서브넷마스크
192.168.0.127 => 192.168.0.0  	255.255.255.128
네트워크 ID 192.168.0.0
브로드캐스트 IP 192.168.0.127
사용가능한 HOST 192.168.0.1 ~ 192.168.0.126

192.168.0.128/25
네트워크 ID 192.168.0.128
브로드캐스트 192.168.0.255
사용 가능한 Host 192.168.0.129 ~ 192.168.0.254

192.168.0.0/24
192.168.0.0~192.168.0.255

192.168.0.0/25
192.168.0.0~192.168.0.127
192.168.0.128/25
192.168.0.128~192.168.0.255

192.168.0.0~192.168.0.127 + 192.168.0.128~192.168.0.255
 => 192.168.0.0 ~ 192.168.0.255

192.168.0.0/24

192.168.0.0/25
192.168.0.128/25

192.168.0.0/26                                 
네트워크 ID 		192.168.0.0
브로드캐스트 IP		192.168.0.63
사용 가능한 Host 범위	192.168.0.1 ~ 192.168.0.62

0011 1111
1100 0000
0000 0000

0100 0000
1100 0000
-----------
0100 0000 => 64

1. 192.168.0.64/26
0100 0000
1100 0000
0100 0000	64

2. 192.168.0.69/26
0100 0101
1100 0000
0100 0000	64

3. 192.168.0.120/26
0111 1000
1100 0000
0100 0000 	64


01		IP
1100 0000	서브넷
0100 0000	네트워크 ID

64 127


   
1100 0000

00	0000 0000	0
01	0100 0000	64
10  	1000 0000	128
11	1100 0000	192

172.16.31.0/24의 네트워크를 나눠서 172.16.31.XXX/27 만들었다.
여기서 XXX에 들어갈 수 있는 모든 IP를 구하세요.
172.16.32.0/27	=> 172.16.32.0~31
172.16.32.32/27	=> 172.16.32.32~63
172.16.32.64
172.16.32.96

172.28.228.144/18
1010 1100. 0001 1100. 1110 0100. 1001 0000
1111 1111. 1111 1111. 1100 0000. 0000 0000
1010 1100. 0001 1100. 1100 0000. 0000 0000 = 172.28.192.0

172.28.228.144/21
1010 1100. 0001 1100. 1110 0100. 1001 0000
1111 1111. 1111 1111. 1111 1000. 0000 0000
1010 1100. 0001 1100. 1110 0000. 0000 0000 = 172.28.224.0

172.28.228.144/23
1010 1100. 0001 1100. 1110 0100. 1001 0000
1111 1111. 1111 1111. 1111 1110. 0000 0000
1010 1100. 0001 1100. 1110 0100. 0000 0000 = 172.28.228.0

172.28.228.144/25
1010 1100. 0001 1100. 1110 0100. 1001 0000
1111 1111. 1111 1111. 1111 1111. 1000 0000
1010 1100. 0001 1100. 1110 0100. 1000 0000 = 172.28.228.128

172.28.228.144/29
1010 1100. 0001 1100. 1110 0100. 1001 0000
1111 1111. 1111 1111. 1111 1111. 1111 1000
1010 1100. 0110 1100. 1110 0100. 1001 0000 = 172.28.228.144
-------------------------------------------------------------------------------------
login : root
Password : 

ip addr
vi /etc/sysconfig/network-scripts/ifcfg-ens33

화면 클릭 -> :q 엔터

i 키
#BOOTPROTO=dhcp
ONBOOT=yes

BOOTPROTO=static
IPADDR=192.168.100.100
NETMASK=255.255.255.0
GATEWAY=192.168.100.2
DNS1=8.8.8.8

ESC키 -> :wq

1. systemctl restart network
	- 네트워크 서비스 재시작
2. ifdown ens33
   ifup ens33
	- ens33 인터페이스 껐다 켜기

ip address show ( ip addr )
ping 8.8.8.8
ctrl + c	: 중지

192.168.100.0/24

yum install -y vim

shutdown -h now

putty 실행

※ 경로
1. 절대경로 : 최상위 디렉토리인 / 를 기준으로
2. 상대경로 : 내가 있는 위치를 기준
	.   : 내가 있는 디렉토리
	..  : 상위 디렉토리
	./  : 현재 디렉토리에 있는~ (생략가능)


리눅스 명령어
   명령어 + 옵션

■ 끄기
 shutdown -h 	컴퓨터 끄기
 shutdown -r	컴퓨터 재부팅	
	      now	지금
	      +10	10분뒤
	      22:00 22시 정각
 shutdown -c	종료예약 취소

■ pwd
  - 현재 내가 있는 디렉토리를 표시

■ ls
  - 현재 디렉토리에 있는 파일 등을 보여줌
	l	: 자세히
	a	: 숨긴 파일 등까지
	  ※ 숨긴 파일은 .으로 시작
	h	: 사용자가 보기 편한 단위
	i	: 아이노드 보여줌
    ※ ls [디렉토리명] : [디렉토리] 안의 내용	
       ls -l [파일명]  :  [파일명]의 속성을 자세히
       ls -ld [디렉토리명] : [디렉토리]의 속성을 자세히

■ cd
  - 디렉토리 이동
	그냥 cd	: 사용자의 홈디렉토리
	cd ~[계정] : [계정]의 홈디렉토리

■ touch
  - 빈 파일을 생성
  - 파일이 있을 경우 최종 수정 시간을 변경 

■ rm
  - 파일 삭제
	i   : 지울 때 물어보는 옵션
	f   : 강제 실행
	r   : 뭔가가 있는 디렉토리 삭제할 때

■ mkdir
  - 디렉토리 생성
	p   : 상위 경로가 없으면 같이 만듬

■ rmdir
  - 디렉토리 삭제. 단, 빈 디렉토리만 삭제

■ cp
  - 복사
  cp  [대상]  [목적지]
     -r  : 내용이 있는 디렉토리를 복사할 때

■ mv
  - 파일 이동(잘라내기)
  - 파일 이름 변경
  mv  [대상]  [목적지]

■ vi 에디터
 i	입력모드 진입
 #	그 행을 주석처리 - 설정 적용 X
 esc키	명령모드로
 u	되돌리기 (실행취소)	
 :se nu
 :숫자	[숫자]행으로 이동
 :w	저장
 :q	닫기
 :wq	저장하고 닫기
   ※ 변경되었다고 안닫아질 때는 !를 붙이기
 dd	한 행 삭제
 yy	한 행 복사 : 여러 행을 할 때는 숫자yy(ex. 5yy)
	p	복사한 행을 밑에 붙여넣기
 /단어	[단어] 찾기
	n	다음 [단어]로 이동

■ cat
  : 파일의 내용을 화면에 출력

■ head
  : 파일의 위에서 10줄 내용을 화면에 출력
   -n	n행 만큼만 출력

■ tail
  : 파일의 밑에서 10줄 내용을 화면에 출력
   -n	n행 만큼만 출력
   -f	추가되는 내용을 화면에 출력

■ more & less
  
■ /etc/passwd
  : 사용자 정의

■ /etc/group 
  : 그룹 정의

■ /etc/shadow
  :  암호 저장

■ 사용자 생성 및 삭제
 useradd  [옵션]  [계정명]
	-u	: UID 설정
	-g	: 그룹 설정
	-d	: 홈디렉토리 설정
 userdel  -r

▷ 사용자 정보 변경
  usermod  [옵션]  [계정명]
	-u	: UID 변경
	-g	: 기본그룹 변경
	-aG	: 보조그룹 추가
	-G	: 보조그룹 변경
	-d	: 홈디렉토리 변경

■ 그룹 생성 및 삭제
 groupadd  [옵션]  [그룹명]
	-g	: GID 설정
 groupdel		: 주그룹으로 가지고있는 계정이 없어야함.

 ▷ 그룹 정보 변경
  groupmod  [옵션]  [그룹명]
	-g	: GID 변경
	-n	: 그룹명 변경
  gpasswd  [옵션]  [그룹명]
	-a	: 사용자 추가
	-d	: 사용자 제거


■ 비밀번호 변경
# passwd

■ 계정 생성 시 파일 배포
 /etc/skel

■ sudo 권한
  /etc/sudoers

 ※ rpm -qa | grep [        ]
  설치된 것 중에 [      ] 단어가 들어간 패키지를 보여줘

vim /etc/selinux/config
   enforcing  =>  disabled
재부팅 후 종료

1. 현재 root의 홈디렉터리에서 실습을 위해 만들었던 디렉토리, 파일들을 삭제하세요
2. cloud 라는 빈 파일을 만드세요.
3. cloud 파일에 1 2 3 4 5 6 이라는 내용을 적으세요
4. ab, cd, ef 라는 디렉토리를 만드세요
5. ab 디렉토리 안에 a안에 b안에 c안에 d안에 e안에 f라는 디렉토리를 만드세요
6. cisco1 파일을 f디렉토리안에 복사하세요.
7. f디렉토리 안의 cisco1파일을 test2라는 이름의  파일로 바꿔보세요.
8. welcome 이라는 내용의 public 파일 생성
9. 계정을 만들 때 public 파일도 배포하도록 설정
10. myhome 이라는 그룹을 생성
11. user10 사용자 설정
12. 비번을 1111로 설정
13. user11 사용자를 생성하면서 myhome 이라는 그룹에 속하게 설정
14. office 그룹 생성
15. user10의 그룹을 office로 변경

■ 파일 검색
 1. find 명령어
# find  [경로]  [옵션]  [조건]  [액션]
  ▷ 옵션
	-name	: 파일 이름
	-size	: 파일 크기
	-perm	: 퍼미션
	-user	: 소유자
   ▷ 액션
	-print	: 기본, 생략
	-exec	: 외부명령

 2. grep
# grep  [옵션]  [패턴]  [파일명]
  ▷ 옵션
	-c	: 라인의 수
	-n	: 행번호와 같이
	-v	: 패턴이 없는 애들
	-i	: 대소문자 구분X
	-l	: 패턴이 있는 파일 선택
      ※ -r	: 패턴의 내용을 가진 파일을 찾을 때

■ 파이프, 리다이렉션
 ▷ 파이프 (| , shift+\(돈표시, 백스페이스))
  - 연결통로를 의미
  - | grep
	ps -ef | grep
	rpm -qa | grep
 ▷ 리다이렉션
   : 입출력의 방향을 바꿈
   - 표준 입력	0
   - 표준 출력 	1
   - 표준 에러	2
   사용 부호는 > >> < <<
   1. 출력을 입력으로 : > 부호 사용
      >	: 결과를 덮어쓰기
      >>	: 결과값 이어쓰기
   2. 표준 출력인 1은 생략 가능
※ 서버 : 서비스를 제공
 어떤 서비스를 제공을 하려고 하면
  1. 설치
  2. 설정
  3. 서비스 시작
  4. 방화벽 허용
vim /etc/vsftpd/vsftpd.conf
systemctl restart/status/enable
→ 파일질라 접속 후 접속 해제
→ rpm -e로 vsftpd 삭제
→ yum으로 vsftpd 설치
→ vsftpd 설정 후 서비스 시작
→ 파일질라로 접속

■ 허가권 (permission)
 r  : 읽기
 w : 쓰기
 x  : 실행
 소유자 (User)
 소유그룹 (Group)
 그 외 (Other)
 - 퍼미션을 8진수로 표현
   -> rwx r-x r-x
       421 401 401 => 755 
 ▷ 허가권 변경
  chmod  [ 변경 ]  [대상]
   ex) rwxr-xr-x를 rw-r--r-- 이렇게 변경할 때 (a.txt)
    chmod 644 a.txt
    chmod -x a.txt
    chmod u-x,g-x,o-x a.txt
    chmod u=rw,g=r,o=r a.txt



■ 소유권
 - 파일이나 디렉토리의 소유자 및 소유그룹을 표시
 ▷ 소유권 변경
  1. 소유자 변경
# chown  [계정]  [대상]
  2. 소유그룹 변경
# chgrp  [그룹]  [대상]
  3. 소유자와 소유그룹 한번에 변경
# chown  [계정].[그룹]  [대상]

[실습]
1. Server를 실행해 root 사용자로 접속 후 test 
   디렉토리 및 오늘날짜 파일 생성
   (파일 내용은 ls /var)
2. 파일 속성 확인
3. 파일 실행 (앞에 ./ 붙이기)
4. 실행이 불가능하면 그 이유 확인 및 실행 가능하도록 변경
  - 파일에 실행 권한이 없기 때문에
  - chmod 755 test/0208
  - 혹은 chmod +x test/0208
5. myhome 그룹에 속해있는 user 계정 생성
6. 파일의 소유자 및 그룹 변경
7. user로 접속 후 홈디렉토리 이동
 (su user)
8. 파일 실행
9. 안되면 안되는 이유?
10. 실행 가능하도록 변경

※ 가상머신 만들기 (minimal)
ISO는 CentOS7-2009로 설치
가상머신 이름 : WEB-Server
CPU 1개, RAM 2G, 네트워크어댑터 NAT, 디스크 40G
IP는 각 대역의 5번
vim 설치 및 selinux disabled 설정

[복습]
1. / 디렉터리에서 파일 크기가 100m이상인 파일 찾기
# find / -size +100M
2. 1번 문제에서 찾은 파일에 대해 자세히 보기 적용 (옵션 사용)
# find / -size +100M -exec ls -l {} \;
3. 2번 명령 실행 시 출력되는 에러를 화면에 보이지않게 하기
# find / -size +100M -exec ls -l {} \; 2> /dev/null
4. 표준 출력값만 파일로 저장하기
  - 위치 : /root/findtest
  - 파일명 : find_result_오늘날짜
# find / -size +100M -exec ls -l {} \; 2> /dev/null > /root/findtest/find_result_0208
5. /etc 디렉터리 안에서  NETMASK=255.255.255.0 을 포함하는 파일 찾기
# grep -r NETMASK=255.255.255.0 /etc
6. user1 계정 생성
  조건 : 사용자 생성 시 그룹은 myhome
7. "welcome to hell" 이라는 내용을 가진 hi라는 파일생성
8. 계정이 생성될 때 마다 hi라는 파일 자동 배포 설정
9. user2 계정생성 (조건은 user1과 같음)
10. hi 파일 확인

■ 특수권한
 ▷ SetUID
  - 파일을 실행시키면 사용자가 아니라 파일의 소유자 권한으로 실행
  - 퍼미션 확인 시 's'로 표시
  - chmod 4XXX 
   ex) 비밀번호 변경 시
# ls -l /usr/bin/passwd

 ▷ SetGID
  - 파일을 실행시키면 사용자가 아니라 파일의 소유그룹 권한으로 실행
  - chmod 2XXX

 ▷ StikyBit
  - 디렉토리에 설정
  - 누구나 디렉토리에 파일을 생성할 수 있지만, 삭제는 소유자만 가능
  - 퍼미션 확인 시 Other에 't'로 표시
  - chmod 1XXX
  
 ※ find의 -perm 옵션
# find / -perm 4755 -exec ls -l {} \; 2> /dev/null

# find / -perm -4700 -exec ls -l {} \; 2> /dev/null
# find / -perm -4704 -exec ls -l {} \; 2> /dev/null

# find / -perm /4755 -exec ls -l {} \; 2> /dev/null

■ 링크
 ▷ 하드링크
# ln  [대상파일]  [링크파일]
   - 동일한 아이노드 사용
   - 원본 수정 시 링크도 수정
   - 원본의 이동 및 삭제 시 링크는 존재함
   - 동일한 파일시스템에서만 적용됨
   - 복사와의 차이는 공간 차지를 하지 않는 다는 것

 ▷ 소프트링크
# ln  -s  [대상파일]  [링크파일]
   - 새로운 아이노드 생성
   - 윈도우의 바로가기와 비슷함
   - 다른 파일 시스템에 링크를 생성할 수 있음
   - 디렉토리의 경우 소프트링크만 생성 가능
   - 원본의 이동이나 삭제 시 링크가 끊김
   
타임존을 Asia/Seoul로 바꿔보세요
참고 
1. ls -l /etc/localtime
2. cd /usr/share/zoneinfo
   ls

※ CentOS7
1. 가상머신 이름 : mail-naver
2. CPU 1개, RAM 2G, HDD 40G, 네트워크 어댑터 NAT
3. 계정 생성
  - 계정 이름 : kim
  - 그룹 이름 : myoffice
  - 홈 디렉토리 : /myoffice/kim
4. IP는 각 대역의 20으로 설정
5. vim 설치 및 selinux disabled 설정

■ 파일 압축 및 묶기
 ▷ 압축
  - 리눅스용 : xz, bzip2, gzip
        압축
	xz  [파일]		==> 파일.xz
     	bzip2  [파일]	==> 파일.bz2
	gzip  [파일]	==> 파일.gz
        압축 풀기
	xz -d [파일].xz
	bzip2 -d [파일].bz2	= bunzip2 
	gzip -d [파일].gz	= gunzip
  - 윈도우 호환용 : zip(압축), unzip(압축 풀기)
        압축
	zip  [파일].zip  [대상]
        압축 풀기
	unzip [대상].zip
 ▷ 묶기 (tar)
  - 여러 파일, 혹은 디렉토리를 묶어서 하나의 파일로 만드는 것
#  tar  [옵션]  [파일].tar  [대상]
       ※ 옵션
	동작 : c(묶기), x(풀기), r(파일 추가), t(경로확인)
	기타 : f(파일, 필수), v(과정보이기)
 	        J(+xz), j(+bzip2), z(+gzip)
	추가 : P 묶을 디렉토리가 절대경로로 설정되어있을 때
	        -C [경로]  :  풀고싶은 경로를 지성
	

# nmcli connection modify ens33 ipv4.address 192.168.100.101/24 
# nmcli con mod ens33 ipv4.address 192.168.100.101/24
# nmcli con mod ens33 ipv4.gateway 192.168.100.2
# nmcli con mod ens33 ipv4.dns 162.128.63.1





